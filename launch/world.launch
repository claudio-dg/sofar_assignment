<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="world"  default="empty"/>  <!-- empty, ... (see ../worlds) -->
  <!--deprecated argument, you should specify the parameters below-->
  <!-- They are described in tiago.urdf.xacro -->
  <arg name="robot"  default="steel"/>
  <arg name="arm"  default="$(eval {'iron': False}.get(arg('robot'), True))"/>
  <arg name="end_effector"  default="$(eval {'iron': 'false', 'steel': 'pal-gripper', 'titanium': 'pal-hey5'}.get(arg('robot'), 'steel'))"/>
  <arg name="ft_sensor"  default="$(eval {'titanium': 'schunk-ft'}.get(arg('robot'), 'false'))"/>
  <arg name="laser_model"  default="sick-571"/>
  <arg name="camera_model"  default="orbbec-astra"/>
  <arg name="multi" default=""/>
  <arg name="gzpose" default="-x 0.0 -y 1.3 -z 0.0 -R 0.0 -P 0.0 -Y 300.0"/> <!-- era -y 1.1-->
  <arg name="gui" default="true"/>
  <arg name="debug" default="false"/>
  <arg name="public_sim" default="true"/>
  <arg name="tuck_arm" default="true"/>
  <arg name="recording" default="false"/>
  <arg name="extra_gazebo_args" default=""/>
  <arg name="use_moveit_camera" default="false"/>
  <arg name="use_dynamic_footprint" default="false"/>
  <arg name="base_type" default="pmb2"/>
  <arg name="base_type_suffix" value="" unless="$(eval arg('base_type') == 'omni_base')"/>
  <arg name="base_type_suffix" value="_omni" if="$(eval arg('base_type') == 'omni_base')"/>
  <arg name="robot_namespace" default=""/>
  


  

<!-- spawn the conveyor_belt in gazebo -->
  <node name="spawn_conveyor_belt" pkg="gazebo_ros" type="spawn_model" args="-file $(find sofar_assignment)/urdf/conveyor.urdf -urdf -model conveyor " />

<!-- spawn the simple box in gazebo
  <node name="spawn_simple_box" pkg="gazebo_ros" type="spawn_model" args="-file $(find sofar_assignment)/models/aruco_cube.sdf -sdf -model aruco_cube -z 2 -y 0.4 " /> -->

 <!--spawn  simple box in gazebo 
  <node name="spawn_blue_box" pkg="gazebo_ros" type="spawn_model" args="-file $(find sofar_assignment)/urdf/blue_box.urdf -urdf -model blue_box  -z 1.4 -y -0.4" /> -->  

<!-- spawn another simple box in gazebo  0.45...0.539 FUNZA
  <node name="spawn_green_box" pkg="gazebo_ros" type="spawn_model" args="-file $(find sofar_assignment)/urdf/green_box.urdf -urdf -model green_box  -z 1.6 -y 0.4 " /> -->

<!-- spawn blue bin in gazebo--> 
  <node name="spawn_bin" pkg="gazebo_ros" type="spawn_model" args="-file $(find sofar_assignment)/urdf/bin.urdf -urdf -model bin  -x 0.7 -y 1 -z 0.2 " />
<!-- spawn green bin in gazebo--> 
  <node name="spawn_green_bin" pkg="gazebo_ros" type="spawn_model" args="-file $(find sofar_assignment)/urdf/green_bin.urdf -urdf -model green_bin  -x -0.7 -y 1 -z 0.2 " />

 <!-- spawn robot in simulation -->
  <include file="$(find tiago_gazebo)/launch/tiago_spawn.launch">
    <arg name="arm" value="$(arg arm)"/>
    <arg name="end_effector" value="$(arg end_effector)"/>
    <arg name="ft_sensor" value="$(arg ft_sensor)"/>
    <arg name="laser_model" value="$(arg laser_model)"/>
    <arg name="camera_model" value="$(arg camera_model)"/>
    <arg name="multi" value="$(arg multi)"/>
    <arg name="gzpose" value="$(arg gzpose)"/>
    <arg name="base_type" value="$(arg base_type)"/>
  </include>

<!-- Joint trajectory and diff drive controllers -->
  <rosparam command="load" file="$(find tiago_controller_configuration_gazebo)/config/mobile_base_controller$(arg base_type_suffix).yaml"/>
  <include file="$(find tiago_controller_configuration_gazebo)/launch/tiago_controllers.launch">
    <arg name="arm" value="$(arg arm)"/>
    <arg name="end_effector" value="$(arg end_effector)"/>
    <arg name="ft_sensor" value="$(arg ft_sensor)"/>
    <arg name="laser_model" value="$(arg laser_model)"/>
    <arg name="camera_model" value="$(arg camera_model)"/>
    <arg name="use_moveit_camera" value="$(arg use_moveit_camera)"/>
    <arg name="robot_namespace" value="$(arg robot_namespace)"/>
    <arg name="base_type_suffix"  value="$(arg base_type_suffix)"/>
    <arg name="base_type" value="$(arg base_type)"/>
  </include>

  <!-- Robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0"/>
    <param name="tf_prefix" type="string" value="$(arg robot_namespace)"/>
  </node>

  <!-- TF lookup -->
  <node pkg="tf_lookup" type="tf_lookup" name="tf_lookup" output="screen"/>

  <!-- Twist mux -->
  <include file="$(find tiago_bringup)/launch/twist_mux.launch"/>

  <!-- Dynamic footprint -->
  <group unless="$(arg public_sim)">
    <include file="$(find tiago_bringup)/launch/dynamic_footprint.launch">
      <arg name="arm" value="$(arg arm)"/>
      <arg name="end_effector" value="$(arg end_effector)"/>
      <arg if="$(arg use_dynamic_footprint)" name="remap_footprint_to" value="move_base/local_costmap/footprint"/>
      <arg name="robot_namespace" value="$(arg robot_namespace)"/>
      <arg name="base_type_suffix"  value="$(arg base_type_suffix)"/>
    </include>
  </group>

  <!-- Republish image_raw to image_rect_color to have the same available topic -->
  <node name="image_raw_to_rect_color_relay" pkg="topic_tools" type="relay" args="xtion/rgb/image_raw xtion/rgb/image_rect_color" />
  <env name="LC_NUMERIC" value="C" />
<!-- start up world -->
  <include file="$(find pal_gazebo_worlds)/launch/pal_gazebo.launch">
    <arg name="world" value="$(arg world)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="recording" value="$(arg recording)"/>
    <arg name="extra_gz_model_path" value="$(find tiago_gazebo)/models"/>
    <arg name="extra_gz_resource_path" value="$(find tiago_gazebo)"/>
    <arg name="extra_gazebo_args" value="$(arg extra_gazebo_args)"/>
  </include>

  <!-- launch head node
  <node name="move_head_node" pkg="sofar_assignment" type="move_head_node"/>-->

</launch>
